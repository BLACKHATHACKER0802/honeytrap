//Package protonames maps IANA protcol numbers to their name.
package protonames

var NetworkNames = map[int]string{
	0x0800: "Internet Protocol version 4 (IPv4)",
	0x0806: "Address Resolution Protocol (ARP)",
	0x0842: "Wake-on-LAN",
	0x22F0: "Audio Video Transport Protocol (AVTP)",
	0x22F3: "IETF TRILL Protocol",
	0x22EA: "Stream Reservation Protocol",
	0x6002: "DEC MOP RC",
	0x6003: "DECnet Phase IV, DNA Routing",
	0x6004: "DEC LAT",
	0x8035: "Reverse Address Resolution Protocol (RARP)",
	0x809B: "AppleTalk (Ethertalk)",
	0x80F3: "AppleTalk Address Resolution Protocol (AARP)",
	0x8100: "VLAN-tagged frame (IEEE 802.1Q) and Shortest Path Bridging IEEE 802.1aq with NNI compatibility",
	0x8102: "Simple Loop Prevention Protocol (SLPP)",
	0x8103: "Virtual Link Aggregation Control Protocol (VLACP)",
	0x8137: "IPX",
	0x8204: "QNX Qnet",
	0x86DD: "Internet Protocol Version 6 (IPv6)",
	0x8808: "Ethernet flow control",
	0x8809: "Ethernet Slow Protocols such as the Link Aggregation Control Protocol (LACP)",
	0x8819: "CobraNet",
	0x8847: "MPLS unicast",
	0x8848: "MPLS multicast",
	0x8863: "PPPoE Discovery Stage",
	0x8864: "PPPoE Session Stage",
	0x887B: "HomePlug 1.0 MME",
	0x888E: "EAP over LAN (IEEE 802.1X)",
	0x8892: "PROFINET Protocol",
	0x889A: "HyperSCSI (SCSI over Ethernet)",
	0x88A2: "ATA over Ethernet",
	0x88A4: "EtherCAT Protocol",
	0x88A8: "Service VLAN tag identifier (S-Tag) on Q-in-Q tunnel.",
	0x88AB: "Ethernet Powerlink",
	0x88B8: "GOOSE (Generic Object Oriented Substation event)",
	0x88B9: "GSE (Generic Substation Events) Management Services",
	0x88BA: "SV (Sampled Value Transmission)",
	0x88BF: "MikroTik RoMON (unofficial)",
	0x88CC: "Link Layer Discovery Protocol (LLDP)",
	0x88CD: "SERCOS III",
	0x88DC: "WSMP, WAVE Short Message Protocol",
	0x88E3: "Media Redundancy Protocol (IEC62439-2)",
	0x88E5: "MAC security (IEEE 802.1AE)",
	0x88E7: "Provider Backbone Bridges (PBB) (IEEE 802.1ah)",
	0x88F7: "Precision Time Protocol over IEEE 802.3 Ethernet",
	0x88F8: "NC-SI",
	0x88FB: "Parallel Redundancy Protocol (PRP)",
	0x8902: "IEEE 802.1ag Connectivity Fault Management (CFM) Protocol / ITU-T Recommendation Y.1731 (OAM)",
	0x8906: "Fibre Channel over Ethernet (FCoE)",
	0x8914: "FCoE Initialization Protocol",
	0x8915: "RDMA over Converged Ethernet (RoCE)",
	0x891D: "TTEthernet Protocol Control Frame (TTE)",
	0x892F: "High-availability Seamless Redundancy (HSR)",
	0x9000: "Ethernet Configuration Testing Protocol",
	0x9100: "VLAN-tagged (IEEE 802.1Q) frame with double tagging",
	0xF1C1: "Redundancy Tag (IEEE 802.1CB Frame Replication and Elimination for Reliability)",
}

func NetworkName(num int) string {
	name := NetworkNames[num]
	if name == "" {
		return "unknown"
	}
	return name
}

// TransportProtocolNames maps proto numbers to their names.
// https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
var TransportProtocolNames = map[uint8]string{
	0:   "hopopt",
	1:   "icmp",
	2:   "igmp",
	3:   "ggp",
	4:   "ipv4",
	5:   "st",
	6:   "tcp",
	7:   "cbt",
	8:   "egp",
	9:   "igp",
	10:  "bbn-rcc-mon",
	11:  "nvp-ii",
	12:  "pup",
	13:  "argus (deprecated)",
	14:  "emcon",
	15:  "xnet",
	16:  "chaos",
	17:  "udp",
	18:  "mux",
	19:  "dcn-meas",
	20:  "hmp",
	21:  "prm",
	22:  "xns-idp",
	23:  "trunk-1",
	24:  "trunk-2",
	25:  "leaf-1",
	26:  "leaf-2",
	27:  "rdp",
	28:  "irtp",
	29:  "iso-tp4",
	30:  "netblt",
	31:  "mfe-nsp",
	32:  "merit-inp",
	33:  "dccp",
	34:  "3pc",
	35:  "idpr",
	36:  "xtp",
	37:  "ddp",
	38:  "idpr-cmtp",
	39:  "tp++",
	40:  "il",
	41:  "ipv6",
	42:  "sdrp",
	43:  "ipv6-route",
	44:  "ipv6-frag",
	45:  "idrp",
	46:  "rsvp",
	47:  "gre",
	48:  "dsr",
	49:  "bna",
	50:  "esp",
	51:  "ah",
	52:  "i-nlsp",
	53:  "swipe (deprecated)",
	54:  "narp",
	55:  "mobile",
	56:  "tlsp",
	57:  "skip",
	58:  "ipv6-icmp",
	59:  "ipv6-nonxt",
	60:  "ipv6-opts",
	61:  "any host internal protocol",
	62:  "cftp",
	63:  "any local network",
	64:  "sat-expak",
	65:  "kryptolan",
	66:  "rvd",
	67:  "ippc",
	68:  "any distributed file system",
	69:  "sat-mon",
	70:  "visa",
	71:  "ipcv",
	72:  "cpnx",
	73:  "cphb",
	74:  "wsn",
	75:  "pvp",
	76:  "br-sat-mon",
	77:  "sun-nd",
	78:  "wb-mon",
	79:  "wb-expak",
	80:  "iso-ip",
	81:  "vmtp",
	82:  "secure-vmtp",
	83:  "vines",
	84:  "ttp",
	85:  "nsfnet-igp",
	86:  "dgp",
	87:  "tcf",
	88:  "eigrp",
	89:  "ospfigp",
	90:  "sprite-rpc",
	91:  "larp",
	92:  "mtp",
	93:  "ax.25",
	94:  "ipip",
	95:  "micp (deprecated)",
	96:  "scc-sp",
	97:  "etherip",
	98:  "encap",
	99:  "any private encryption scheme",
	100: "gmtp",
	101: "ifmp",
	102: "pnni",
	103: "pim",
	104: "aris",
	105: "scps",
	106: "qnx",
	107: "a/n",
	108: "ipcomp",
	109: "snp",
	110: "compaq-peer",
	111: "ipx-in-ip",
	112: "vrrp",
	113: "pgm",
	114: "any 0-hop protocol",
	115: "l2tp",
	116: "ddx",
	117: "iatp",
	118: "stp",
	119: "srp",
	120: "uti",
	121: "smp",
	122: "sm (deprecated)",
	123: "ptp",
	124: "isis over ipv4",
	125: "fire",
	126: "crtp",
	127: "crudp",
	128: "sscopmce",
	129: "iplt",
	130: "sps",
	131: "pipe",
	132: "sctp",
	133: "fc",
	134: "rsvp-e2e-ignore",
	135: "mobility header",
	136: "udplite",
	137: "mpls-in-ip",
	138: "manet",
	139: "hip",
	140: "shim6",
	141: "wesp",
	142: "rohc",
	143: "Ethernet",
	253: "Use for experimentation and testing",
	254: "Use for experimentation and testing",
	255: "Reserved",
}

func TransportName(num uint8) string {
	name := TransportProtocolNames[num]
	if name == "" {
		return "unassigned"
	}
	return name
}
